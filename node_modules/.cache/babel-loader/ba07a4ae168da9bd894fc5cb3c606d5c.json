{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/danielduan/Documents/Penn/clubs/muse-innovation/quarantine-test/src/components/QuizPage/Quiz.jsx\";\nimport React, { Component } from 'react';\nimport firebase from \"../../firebase\";\nimport Checkbox from \"./Checkbox\";\nconst OPTIONS = [\"Question One:\", \"Question Two:\", \"Question Three:\", \"Question Four:\"];\n\nclass Quiz extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      checkboxes: OPTIONS.reduce((options, option) => ({ ...options,\n        [option]: false\n      }), {})\n    };\n    this.userID = this.props.location.state.userID;\n    this.score = 0;\n\n    this.handleCheckboxChange = changeEvent => {\n      const {\n        name\n      } = changeEvent.target;\n      this.setState(prevState => ({\n        checkboxes: { ...prevState.checkboxes,\n          [name]: !prevState.checkboxes[name]\n        }\n      }));\n    };\n\n    this.writeToDatabase = () => {\n      console.log(this.score);\n    };\n\n    this.handleFormSubmit = formSubmitEvent => {\n      formSubmitEvent.preventDefault();\n      Object.keys(this.state.checkboxes).filter(checkbox => this.state.checkboxes[checkbox]).forEach(checkbox => {\n        this.score++;\n        console.log(checkbox, \"is selected.\");\n      });\n      this.writeToDatabase();\n    };\n\n    this.createCheckbox = option => /*#__PURE__*/_jsxDEV(Checkbox, {\n      label: option,\n      isSelected: this.state.checkboxes[option],\n      onCheckboxChange: this.handleCheckboxChange\n    }, option, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this);\n\n    this.createCheckboxes = () => OPTIONS.map(this.createCheckbox);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"User ID: \", this.userID]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleFormSubmit,\n        ref: this.inputRef,\n        children: [this.createCheckboxes(), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Quiz;","map":{"version":3,"sources":["/Users/danielduan/Documents/Penn/clubs/muse-innovation/quarantine-test/src/components/QuizPage/Quiz.jsx"],"names":["React","Component","firebase","Checkbox","OPTIONS","Quiz","state","checkboxes","reduce","options","option","userID","props","location","score","handleCheckboxChange","changeEvent","name","target","setState","prevState","writeToDatabase","console","log","handleFormSubmit","formSubmitEvent","preventDefault","Object","keys","filter","checkbox","forEach","createCheckbox","createCheckboxes","map","render","inputRef"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,MAAMC,OAAO,GAAG,CAAC,eAAD,EAAkB,eAAlB,EAAmC,iBAAnC,EAAsD,gBAAtD,CAAhB;;AAEA,MAAMC,IAAN,SAAmBJ,SAAnB,CAA6B;AAAA;AAAA;AAAA,SACzBK,KADyB,GACjB;AACJC,MAAAA,UAAU,EAAEH,OAAO,CAACI,MAAR,CACR,CAACC,OAAD,EAAUC,MAAV,MAAsB,EACpB,GAAGD,OADiB;AAEpB,SAACC,MAAD,GAAU;AAFU,OAAtB,CADQ,EAKR,EALQ;AADR,KADiB;AAAA,SAWzBC,MAXyB,GAWhB,KAAKC,KAAL,CAAWC,QAAX,CAAoBP,KAApB,CAA0BK,MAXV;AAAA,SAYzBG,KAZyB,GAYjB,CAZiB;;AAAA,SAczBC,oBAdyB,GAcFC,WAAW,IAAI;AAClC,YAAM;AAAEC,QAAAA;AAAF,UAAWD,WAAW,CAACE,MAA7B;AAEA,WAAKC,QAAL,CAAcC,SAAS,KAAK;AAC1Bb,QAAAA,UAAU,EAAE,EACV,GAAGa,SAAS,CAACb,UADH;AAEV,WAACU,IAAD,GAAQ,CAACG,SAAS,CAACb,UAAV,CAAqBU,IAArB;AAFC;AADc,OAAL,CAAvB;AAMD,KAvBsB;;AAAA,SAyBzBI,eAzByB,GAyBP,MAAM;AACpBC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKT,KAAjB;AACH,KA3BwB;;AAAA,SA6BzBU,gBA7ByB,GA6BNC,eAAe,IAAI;AAClCA,MAAAA,eAAe,CAACC,cAAhB;AAEAC,MAAAA,MAAM,CAACC,IAAP,CAAY,KAAKtB,KAAL,CAAWC,UAAvB,EACGsB,MADH,CACUC,QAAQ,IAAI,KAAKxB,KAAL,CAAWC,UAAX,CAAsBuB,QAAtB,CADtB,EAEGC,OAFH,CAEWD,QAAQ,IAAI;AACnB,aAAKhB,KAAL;AACAQ,QAAAA,OAAO,CAACC,GAAR,CAAYO,QAAZ,EAAsB,cAAtB;AACD,OALH;AAOA,WAAKT,eAAL;AACH,KAxCwB;;AAAA,SA4CzBW,cA5CyB,GA4CRtB,MAAM,iBACnB,QAAC,QAAD;AACE,MAAA,KAAK,EAAEA,MADT;AAEE,MAAA,UAAU,EAAE,KAAKJ,KAAL,CAAWC,UAAX,CAAsBG,MAAtB,CAFd;AAGE,MAAA,gBAAgB,EAAE,KAAKK;AAHzB,OAIOL,MAJP;AAAA;AAAA;AAAA;AAAA,YA7CqB;;AAAA,SAqDzBuB,gBArDyB,GAqDN,MAAM7B,OAAO,CAAC8B,GAAR,CAAY,KAAKF,cAAjB,CArDA;AAAA;;AAuDzBG,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACI;AAAA,gCAAc,KAAKxB,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAM,QAAA,QAAQ,EAAE,KAAKa,gBAArB;AAAuC,QAAA,GAAG,EAAE,KAAKY,QAAjD;AAAA,mBACK,KAAKH,gBAAL,EADL,eA2BI;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,SAAS,EAAC,iBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA3BJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAoCH;;AA5FwB;;AA+F7B,eAAe5B,IAAf","sourcesContent":["import React, { Component } from 'react';\nimport firebase from \"../../firebase\";\nimport Checkbox from \"./Checkbox\";\n\nconst OPTIONS = [\"Question One:\", \"Question Two:\", \"Question Three:\", \"Question Four:\"];\n\nclass Quiz extends Component {\n    state = { \n        checkboxes: OPTIONS.reduce(\n            (options, option) => ({\n              ...options,\n              [option]: false\n            }),\n            {}\n          )\n     }\n\n    userID = this.props.location.state.userID\n    score = 0\n\n    handleCheckboxChange = changeEvent => {\n        const { name } = changeEvent.target;\n    \n        this.setState(prevState => ({\n          checkboxes: {\n            ...prevState.checkboxes,\n            [name]: !prevState.checkboxes[name]\n          }\n        }));\n      };\n    \n    writeToDatabase = () => {\n        console.log(this.score);\n    }\n\n    handleFormSubmit = formSubmitEvent => {\n        formSubmitEvent.preventDefault();\n    \n        Object.keys(this.state.checkboxes)\n          .filter(checkbox => this.state.checkboxes[checkbox])\n          .forEach(checkbox => {\n            this.score++;\n            console.log(checkbox, \"is selected.\");\n          });\n        \n        this.writeToDatabase();\n    };\n\n\n\n    createCheckbox = option => (\n        <Checkbox\n          label={option}\n          isSelected={this.state.checkboxes[option]}\n          onCheckboxChange={this.handleCheckboxChange}\n          key={option}\n        />\n      );\n    \n    createCheckboxes = () => OPTIONS.map(this.createCheckbox);\n\n    render() { \n        return (\n            <div className=\"question-list\">\n                <h1>User ID: {this.userID}</h1>\n                <form onSubmit={this.handleFormSubmit} ref={this.inputRef}>\n                    {this.createCheckboxes()}\n                    {/* <div className=\"form-check\">\n                        <input type=\"checkbox\" name=\"chkBox\" className=\"form-check-input\" id=\"q1\"></input>\n                        <label className=\"form-check-label\" for=\"q1\">Question 1:</label>\n                    </div>\n\n                    <div className=\"form-check\">\n                        <input type=\"checkbox\" name=\"chkBox\" className=\"form-check-input\" id=\"q2\"></input>\n                        <label className=\"form-check-label\" for=\"q2\">Question 2:</label>\n                    </div>\n\n                    <div className=\"form-check\">\n                        <input type=\"checkbox\" name=\"chkBox\" className=\"form-check-input\" id=\"q3\"></input>\n                        <label className=\"form-check-label\" for=\"q2\">Question 3:</label>\n                    </div>\n\n                    <div className=\"form-check\">\n                        <input type=\"checkbox\" name=\"chkBox\" className=\"form-check-input\" id=\"q4\"></input>\n                        <label className=\"form-check-label\" for=\"q2\">Question 4:</label>\n                    </div>\n\n                    <div className=\"form-check\">\n                        <input type=\"checkbox\" name=\"chkBox\" className=\"form-check-input\" id=\"q5\"></input>\n                        <label className=\"form-check-label\" for=\"q2\">Question 5:</label>\n                    </div> */}\n\n                    <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n\n                </form>\n            </div>\n\n        );\n    }\n}\n \nexport default Quiz;"]},"metadata":{},"sourceType":"module"}